@model Theater.Application.Modules.AccountModule.Commands.SignupCommand.SignupRequest

@{
    ViewData["Title"] = "Sign Up";
    ViewBag.BodyId = "Register";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />
<link rel="stylesheet" href="~/assets/sass/main.css" />

@section addcss {
    <style>
        .input-group{
            margin-bottom:20px !important;
        }
    </style>
}

<section class="auth">
    <img class="auth__top-image" src="../../assets/media/images/inside-theater.jpg" alt="Background" />
    <div class="container">
        <div class="auth__image">
            <img src="../../assets/media/images/inside-theater.jpg" alt="Background" />
        </div>
        <div class="auth__form">
            <h1>Create Account</h1>
            <p>Welcome! Enter your details to create an account.</p>
            <form asp-action="Signup" novalidate method="post" id="signupForm">
                <div class="input-group">
                    <input asp-for="Name" placeholder="Name" class="form-control" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="input-group">
                    <input asp-for="Surname" placeholder="Surname" class="form-control" required />
                    <span asp-validation-for="Surname" class="text-danger"></span>
                </div>
                <div class="input-group">
                    <input asp-for="Email" type="email" placeholder="Email Address" class="form-control" required />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="input-group">
                    <input asp-for="PhoneNumber" type="tel" id="phone" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                    <span id="phoneError" class="text-danger"></span>
                </div>
                <div class="input-group">
                    <input asp-for="Password" type="password" placeholder="Password" class="form-control" required />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="input-group">
                    <input asp-for="ConfirmPassword" type="password" placeholder="Confirm Password" class="form-control" required />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn">Create account</button>
            </form>
        </div>
    </div>
</section>



@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/popper.js@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
    <script>
        $(document).ready(function () {

            var input = document.querySelector("#phone");
            var iti = window.intlTelInput(input, {
                utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
                hiddenInput: "full",
                separateDialCode: true,
                autoPlaceholder: "polite",
                nationalMode: false
            });

            const errorMap = ["Invalid number", "Invalid country code", "Too short", "Too long", "Invalid number"];

            const reset = () => {
                input.classList.remove("error");
                $('#phoneError').text('');
            };

            const showError = (msg) => {
                input.classList.add("error");
                $('#phoneError').text(msg);
            };

            input.addEventListener('change', () => {
                reset();
                if (input.value.trim() && !iti.isValidNumber()) {
                    const errorCode = iti.getValidationError();
                    const msg = errorMap[errorCode] || "Invalid phone number";
                    showError(msg);
                }
            });

            input.addEventListener('keyup', () => {
                reset();
                if (input.value.trim() && !iti.isValidNumber()) {
                    const errorCode = iti.getValidationError();
                    const msg = errorMap[errorCode] || "Invalid phone number";
                    showError(msg);
                }
            });

            $('#signupForm').on('submit', function () {
                    reset(); // Clear previous error message
                    if (input.value.trim() && !iti.isValidNumber()) {
                        const errorCode = iti.getValidationError();
                        const msg = errorMap[errorCode] || "Invalid phone number";
                        showError(msg); // Show error message
                        return false;
                    } else if (input.value.trim()) {
                        var full_number = iti.getNumber(intlTelInputUtils.numberFormat.E164);
                        input.value = full_number;
                    }
            });
        });
    </script>
}