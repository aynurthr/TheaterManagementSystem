@model Theater.Application.Modules.PosterModule.Queries.PosterGetByIdQuery.PosterGetByIdRequestDto

@{
    ViewBag.Title = @Model.Title;
    ViewBag.BodyId = "Poster-details";
}

<section class="poster-details">
    <img class="poster-image" src="@Model.ImageUrl" alt="Poster Image" />
    <div class="poster-item__content">
        <div class="poster-item__content__top">
            <div class="container">
                <div class="poster-item__content__top__left">
                    <h1>@Model.Title</h1>
                    <div class="genre">@Model.Genre</div>
                </div>
                <div class="poster-item__content__top__middle">
                    <div>
                        <p>Duration</p>
                        <div class="duration">@Model.Duration</div>
                    </div>
                    <div>
                        <p>Age Limit</p>
                        <div class="age">@Model.Age</div>
                    </div>
                    <div>
                        <p>Rating</p>
                        <div class="duration">@Model.Rating</div>
                    </div>
                </div>
                <div class="poster-item__content__top__right">
                    <a id="buy-ticket-btn" href="@Url.Action("BuyTicket", "Posters", new { id = Model.Id })">Buy Ticket</a>
                </div>
            </div>
        </div>

        <div class="poster-item__content__bottom">
            <section class="tabs">
                <div class="container">
                    <div class="tabs__menu">
                        <a href="#" class="tab active" data-tab="about">About the Show</a>
                        <a href="#" class="tab" data-tab="team">Cast</a>
                        <a href="#" class="tab" data-tab="comments">Feedback</a>
                    </div>
                    <div class="tabs__content">
                        <div class="tab-content" id="about" style="display: block">
                            <p>@Html.Raw(Model.Description)</p>
                        </div>
                        <div class="tab-content" id="team" style="display: none">
                            <div class="team-content">
                                @foreach (var actor in Model.Actors)
                                {
                                    <div class="cast-member">
                                        <img src="@actor.ImageSrc" alt="@actor.FullName" />
                                        <div class="cast-info">
                                            <p class="role">@actor.Role</p>
                                            <h3>@actor.FullName</h3>
                                            <p>@actor.Title</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="tab-content" id="comments" style="display: none">
                            <div class="comments-content">
                                <h2>Comments</h2>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <form asp-action="AddComment" method="post" class="comment-form" id="comment-form">
                                        <input type="hidden" name="PosterId" value="@Model.Id" />
                                        <textarea class="form-control" id="comment-input" name="CommentText" placeholder="Add a comment..." required></textarea>
                                        <button type="submit" class="btn btn-primary mt-2">Post Comment</button>
                                    </form>
                                }
                                else
                                {
                                    <p>You must be logged in to add a comment.</p>
                                }
                                <div class="comments-info">
                                    <p id="comments-count">@Model.Comments.Count() Comments</p>
                                </div>
                                <div class="comments-list" id="comments-list">
                                    @foreach (var comment in Model.Comments)
                                    {
                                        <div class="comment">
                                            <div class="comment-content">
                                                <div class="comment-user">@comment.UserName</div>
                                                <div class="comment-time">@comment.CreatedAt.ToString("MM/dd/yyyy, h:mm:ss tt")</div>
                                                @if (User.Identity.IsAuthenticated && ViewBag.CurrentUserName == @comment.UserName)
                                                {
                                                    <form asp-action="EditComment" method="post" class="edit-comment-form mt-2 d-inline">
                                                        <input type="hidden" name="Id" value="@comment.Id" />
                                                        <input type="hidden" name="PosterId" value="@Model.Id" />
                                                        <div class="form-group">
                                                            <textarea name="CommentText" class="form-control" style="resize: none;">@comment.Text</textarea>
                                                        </div>
                                                        <button type="submit" class="btn btn-success btn-sm">Save</button>
                                                    </form>
                                                    <a href="@Url.Action("RemoveComment", "Posters", new { id = comment.Id })"
                                                       data-entity-name="comment"
                                                       onclick="confirmRemoveEntity(event)" class="btn btn-danger btn-sm mt-2 d-inline">Delete</a>

                                                }
                                                else
                                                {
                                                    <div class="comment-text">@comment.Text</div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
            </section>
        </div>
        <p class="poster-description"></p>
    </div>
</section>

@section addjs {
    <script src="https://kit.fontawesome.com/277e46d269.js" crossorigin="anonymous"></script>
    <script src="~/js/posterDetails.js"></script>
    <script>
        function confirmRemoveEntity(e) {
            e.preventDefault();
            let element = e.currentTarget;
            let name = $(element).data('entity-name');

            if (confirm(`Are you sure you want to delete this ${name}?`)) {
                removeEntity(element);
            }
        }

        function removeEntity(element) {
            $(element).attr('disabled', 'disabled');

            const link = $(element).attr('href');

            $.ajax({
                url: link,
                type: 'POST',
                success: function (response) {
                    alert('Comment deleted successfully');
                    location.reload(); // Refresh the page to reflect the deletion
                },
                error: function (errResponse) {
                    console.log(errResponse);
                    alert('An error occurred while deleting the item.');
                }
            }).always(function () {
                $(element).removeAttr('disabled').trigger('blur');
            });
        }
    </script>
}
