@model Theater.Presentation.Models.UserProfileViewModel

@{
    ViewData["Title"] = "Edit Profile";
    ViewBag.BodyId = "EditProfile";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@17/build/css/intlTelInput.css" />
<link rel="stylesheet" href="~/assets/sass/main.css" />

<section class="profile">
    <div class="container">
        <h1>Edit Your Profile</h1>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <strong>There are errors in the form:</strong>
                <ul>
                    @foreach (var state in ViewData.ModelState)
                    {
                        @foreach (var error in state.Value.Errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    }
                </ul>
            </div>
        }

        <form asp-action="EditProfile" method="post" id="profileForm">
            <div class="form-group">
                <label asp-for="UserName">UserName</label>
                <input asp-for="UserName" class="form-control" readonly />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name">Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Surname">Surname</label>
                <input asp-for="Surname" class="form-control" />
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email">Email</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber">Phone Number</label>
                <input asp-for="PhoneNumber" id="phone" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                <span id="phoneError" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CurrentPassword">Current Password</label>
                <input asp-for="CurrentPassword" type="password" class="form-control" />
                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NewPassword">New Password</label>
                <input asp-for="NewPassword" type="password" class="form-control" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmNewPassword">Confirm New Password</label>
                <input asp-for="ConfirmNewPassword" type="password" class="form-control" />
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Action("Profile", "UserProfile")'">Cancel</button>

        </form>
    </div>
</section>



@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/popper.js@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/intl-tel-input@17/build/js/intlTelInput.min.js"></script>
    <script>
        $(document).ready(function () {
            var input = document.querySelector("#phone");
            var iti = window.intlTelInput(input, {
                utilsScript: "https://cdn.jsdelivr.net/npm/intl-tel-input@17/build/js/utils.js",
                hiddenInput: "full",
                separateDialCode: true,
            });

            const errorMap = ["Invalid number", "Invalid country code", "Too short", "Too long", "Invalid number"];

            const reset = () => {
                input.classList.remove("error");
                $('#phoneError').text('');
            };

            const showError = (msg) => {
                input.classList.add("error");
                $('#phoneError').text(msg);
            };

            input.addEventListener('change', () => {
                reset();
                if (input.value.trim() && !iti.isValidNumber()) {
                    const errorCode = iti.getValidationError();
                    const msg = errorMap[errorCode] || "Invalid phone number";
                    showError(msg);
                }
            });

            input.addEventListener('keyup', () => {
                reset();
                if (input.value.trim() && !iti.isValidNumber()) {
                    const errorCode = iti.getValidationError();
                    const msg = errorMap[errorCode] || "Invalid phone number";
                    showError(msg);
                }
            });

            $('#profileForm').validate({
                rules: {
                    Name: {
                        required: true,
                        maxlength: 100
                    },
                    Surname: {
                        required: true,
                        maxlength: 100
                    },
                    Email: {
                        required: true,
                        email: true
                    },
                    CurrentPassword: {
                        minlength: 6
                    },
                    NewPassword: {
                        minlength: 6
                    },
                    ConfirmNewPassword: {
                        equalTo: "#NewPassword"
                    }
                },
                messages: {
                    Name: {
                        required: "Name is required.",
                        maxlength: "Name must not exceed 100 characters."
                    },
                    Surname: {
                        required: "Surname is required.",
                        maxlength: "Surname must not exceed 100 characters."
                    },
                    Email: {
                        required: "Email is required.",
                        email: "Invalid email format."
                    },
                    CurrentPassword: {
                        minlength: "Password must be at least 6 characters long."
                    },
                    NewPassword: {
                        minlength: "Password must be at least 6 characters long."
                    },
                    ConfirmNewPassword: {
                        equalTo: "Passwords do not match."
                    }
                }
            });

            $('#profileForm').submit(function (event) {
                reset(); // Clear previous error message
                if (input.value.trim() && !iti.isValidNumber()) {
                    const errorCode = iti.getValidationError();
                    const msg = errorMap[errorCode] || "Invalid phone number";
                    showError(msg); // Show error message
                    return false;
                } else if (input.value.trim()) {
                    var full_number = iti.getNumber(intlTelInputUtils.numberFormat.E164);
                    input.value = full_number;
                }
            });
        });
    </script>
}
