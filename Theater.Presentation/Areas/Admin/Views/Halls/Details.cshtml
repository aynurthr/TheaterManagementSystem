@model Theater.Application.Modules.HallModule.Queries.HallRequestDto

@{
    ViewBag.Title = "Manage Seats for " + Model.Name;
}

<h2>Manage Seats for @Model.Name</h2>

<div>
    <div id="rows-container">
        @foreach (var row in Model.Seats.GroupBy(s => s.Row))
        {
            <div class="row" data-row="@row.Key">
                <span class="row-label">@row.Key</span>
                @foreach (var seat in row)
                {
                    <span class="seat" data-seat-number="@seat.Number">@seat.Number</span>
                }
                <button class="btn btn-sm btn-danger remove-seat">-</button>
                <button class="btn btn-sm btn-success add-seat">+</button>
            </div>
        }
    </div>
    <button class="btn btn-sm btn-primary add-row">Add Row</button>
</div>

<button id="save-button" class="btn btn-primary mt-3">Save</button>

@section addjs {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            var existingSeats = @Html.Raw(Json.Serialize(Model.Seats));

            function updateSeatActions() {
                // Add seat
                $('.add-seat').off('click').on('click', function () {
                    var rowDiv = $(this).closest('.row');
                    var row = rowDiv.data('row');
                    var seatCount = rowDiv.find('.seat').length + 1;
                    var seat = $('<span class="seat ml-1" data-seat-number="' + seatCount + '">' + seatCount + '</span>');
                    var seats = rowDiv.find('.seat').toArray().concat(seat);
                    seats.sort(function (a, b) {
                        return $(a).data('seat-number') - $(b).data('seat-number');
                    });
                    rowDiv.find('.seat').remove();
                    seats.forEach(function (s) {
                        rowDiv.find('.remove-seat').before(s);
                    });
                });

                // Remove seat
                $('.remove-seat').off('click').on('click', function () {
                    var rowDiv = $(this).closest('.row');
                    var seatCount = rowDiv.find('.seat').length;
                    var lastSeat = rowDiv.find('.seat').last();

                    if (seatCount > 0) {
                        lastSeat.remove();
                    }
                });

                // Add row
                $('.add-row').off('click').on('click', function () {
                    var rowCount = $('#rows-container .row').length;
                    var newRow = String.fromCharCode(65 + rowCount);
                    $('#rows-container').append(`
                            <div class="row" data-row="` + newRow + `">
                                <span class="row-label">` + newRow + `</span>
                                <button class="btn btn-sm btn-danger remove-seat">-</button>
                                <button class="btn btn-sm btn-success add-seat">+</button>
                            </div>
                        `);
                    updateSeatActions();
                });
            }

            // Initialize seat actions
            updateSeatActions();

            // Populate existing seats
            existingSeats.forEach(function (seat) {
                var rowDiv = $('#rows-container .row[data-row="' + seat.row + '"]');
                if (rowDiv.length === 0) {
                    var newRow = `
                            <div class="row" data-row="` + seat.row + `">
                                <span class="row-label">` + seat.row + `</span>
                                <button class="btn btn-sm btn-danger remove-seat">-</button>
                                <button class="btn btn-sm btn-success add-seat">+</button>
                            </div>
                        `;
                    $('#rows-container').append(newRow);
                    rowDiv = $('#rows-container .row[data-row="' + seat.row + '"]');
                }
                if (rowDiv.find('.seat[data-seat-number="' + seat.number + '"]').length === 0) {
                    var seatSpan = $('<span class="seat ml-1" data-seat-number="' + seat.number + '">' + seat.number + '</span>');
                    rowDiv.find('.remove-seat').before(seatSpan);
                }
            });

            // Sort seats in each row
            $('#rows-container .row').each(function () {
                var rowDiv = $(this);
                var seats = rowDiv.find('.seat').toArray();
                seats.sort(function (a, b) {
                    return $(a).data('seat-number') - $(b).data('seat-number');
                });
                rowDiv.find('.seat').remove();
                seats.forEach(function (s) {
                    rowDiv.find('.remove-seat').before(s);
                });
            });

            // Save button functionality
            $('#save-button').click(function () {
                var hallId = @Model.Id;
                var seatsToAdd = [];
                var seatsToRemove = [];

                $('#rows-container .row').each(function () {
                    var rowDiv = $(this);
                    var row = rowDiv.data('row');
                    var seatNumbers = rowDiv.find('.seat').map(function () {
                        return $(this).data('seat-number');
                    }).get();

                    seatNumbers.forEach(function (number) {
                        var existingSeat = existingSeats.find(seat => seat.row === row && seat.number === number);
                        if (!existingSeat) {
                            seatsToAdd.push({
                                hallId: hallId,
                                row: row,
                                number: number,
                                price: 10.00 // Default price, we wont need it since tickets already have a price
                            });
                        }
                    });

                    existingSeats.forEach(function (seat) {
                        if (seat.row === row && !seatNumbers.includes(seat.number)) {
                            seatsToRemove.push(seat);
                        }
                    });
                });

                $.ajax({
                    url: '/Admin/Halls/add-remove-seats',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        hallId: hallId,
                        seatsToAdd: seatsToAdd,
                        seatsToRemove: seatsToRemove
                    }),
                    success: function (response) {
                        alert('Seats updated successfully.');
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        alert('Failed to update seats. Please try again.');
                    }
                });
            });

            // Initialize the first row if there are no rows
            if ($('#rows-container .row').length === 0) {
                $('.add-row').trigger('click');
            }
        });
    </script>


}



